package hired

//import "github.com/herb-go/usersystem-drivers/commonpayload"
//import "github.com/herb-go/usersystem-drivers/redisactives"
//import "github.com/herb-go/usersystem"
//import "github.com/herb-go/usersystem-drivers/herbsession"
//import "github.com/herb-go/usersystem-drivers/memactives"
//import "github.com/herb-go/usersystem-drivers/sqlusersystem"
//import "github.com/herb-go/usersystem-drivers/tomluser"
//import "github.com/herb-go/usersystem-drivers/uidaccount"

//UNCOMMENT BELOW CODE TO USE USERSYSTEM HerbSession DRIVER
////WORKER(HerbSession):Usersystem herb session directive
//
////HerbSession usersystem directive factory  from "github.com/herb-go/usersystem-drivers/herbsession"
//var HerbSession = herbsession.DirectiveFactory

//UNCOMMENT BELOW CODE TO USE USERSYSTEM TOMLUSER DRIVER

////WORKER(TOMlUser):Member ldap user directive
//
////TOMlUser usersystem directive factory  from "github.com/herb-go/usersystem-drivers/tomluser"
//var TOMlUser = tomluser.DirectiveFactory


//UNCOMMENT BELOW CODE TO USE USERSYSTEM MEMACTIVES DRIVER

////WORKER(MemActives):Usersystem in-memory actives directive
//
////MemActives usersystem directive factory  from "github.com/herb-go/usersystem-drivers/memactives"
//var MemActives = memactives.DirectiveFactory


//UNCOMMENT BELOW CODE TO USE USERSYSTEM MEMACTIVES DRIVER

////WORKER(MemActives):Usersystem redis actives directive
//
////RedisActives usersystem directive factory  from "github.com/herb-go/usersystem-drivers/memactives"
//var RedisActives = redisactives.DirectiveFactory


//UNCOMMENT BELOW CODE TO USE USERSYSTEM UIDACCOUNT DRIVER

////WORKER(UIDAccount):Member uid as account  directive
//
////UIDAccount  directive factory  from "github.com/herb-go/usersystem-drivers/uidaccount"
//var UIDAccount = uidaccount.DirectiveFactory


//UNCOMMENT BELOW CODE TO USE USERSYSTEM SQLUSER DRIVER

////WORKER(SQLUserSystem):sql usersystem  directive
//
////SQLUserSystem  directive factory  from "github.com/herb-go/usersystem-drivers/sqlusersystem"
//var SQLUserSystem = sqlusersystem.DirectiveFactory


//UNCOMMENT BELOW CODE TO USE USERSYSTEM USERCACHE DRIVER

////WORKER(UserCache):user cache  directive
//
////UserCache  directive factory  from "github.com/herb-go/usersystem-drivers/usercache"
//var UserCache = usercache.DirectiveFactory

//UNCOMMENT BELOW CODE TO USE USERSYSTEM PAYLOADLOGINTIME DRIVER

////WORKER(PayloadLogintime):User login time payload directive
//
////PayloadLogintime  login time payload directive factory  from "github.com/herb-go/usersystem-drivers/commonpayload"
//var PayloadLogintime = commonpayload.LoginPayload

//UNCOMMENT BELOW CODE TO USE USERSYSTEM PAYLOADHTTPIP DRIVER

////WORKER(PayloadHTTPIp):User http id payload  directive
//
////PayloadHTTPIp  http ip payload directive factory  from "github.com/herb-go/usersystem-drivers/commonpayload"
//var PayloadHTTPIp = commonpayload.HTTPIpPayload

// //MyUserSystemDirectiveFactory put your own directive factory code here
// var MyUserSystemDirectiveFactory = func(loader func(v interface{}) error) (usersystem.Directive, error) {
// 	d := NewMyUserSystemDirective()
// 	err := loader(d)
// 	if err != nil {
// 		return nil, err
// 	}
// 	return d, nil
// }
