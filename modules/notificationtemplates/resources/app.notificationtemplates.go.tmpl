package app

import (
	"sync/atomic"

	"github.com/herb-go/herbconfig/source"
	"github.com/herb-go/notification-drivers/render/templaterender"
	"github.com/herb-go/util"
	"github.com/herb-go/util/config"
	"github.com/herb-go/util/config/tomlconfig"
)

//{{.Name.Pascal}} notification render templates
var {{.Name.Pascal}} = &templaterender.Templates{}

var sync{{.Name.Pascal}} atomic.Value

//Store{{.Name.Pascal}} atomically store notification render templates
func (a *appSync) Store{{.Name.Pascal}}(m *templaterender.Templates) {
	sync{{.Name.Pascal}}.Store(m)
}

//Load{{.Name.Pascal}} atomically load notification render templates
func (a *appSync) Load{{.Name.Pascal}}() *templaterender.Templates {
	v := sync{{.Name.Pascal}}.Load()
	if v == nil {
		return nil
	}
	return v.(*templaterender.Templates)
}

func init() {
	config.RegisterLoader(util.ConfigFile("/{{.Name.Lower}}.toml"), func(configpath source.Source) {
		util.Must(tomlconfig.Load(configpath, {{.Name.Pascal}}))
		Sync.Store{{.Name.Pascal}}({{.Name.Pascal}})
	})
}
