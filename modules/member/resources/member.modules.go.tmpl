package {{.Name.Lower}}

import (
	"net/http"

	"github.com/herb-go/member"
	"github.com/herb-go/util"

	"modules/app"
	{{if .InstallSession -}}
	sessionmodule "modules/{{.Name.LowerWithParentPath}}/session"		
	{{- end}}
)

//ModuleName module name
const ModuleName="800{{.Name.LowerWithParentDotSeparated}}"



//Session member session.
{{if .InstallSession -}}
var Session=sessionmodule.Session
{{- else -}}
var Session *session.Store
{{- end}}

//Member {{.Name.Lower}} member  module.
var Member= member.New()

//IdentifyRequest Identify user in http request.
//Return user id and any error raised.
//If user is not logged in,returned user id will by empty string.
func IdentifyRequest(r *http.Request) (uid string, err error) {
	return Member.IdentifyRequest(r)
}

func init() {
	util.RegisterModule(ModuleName, func() {
		//Init registered initator which registered by RegisterInitiator
		util.Must(Member.Init(member.OptionCommon(Session)))
		Member.ContextName = member.ContextType("{{.Name.LowerWithParentDotSeparated}}")
		util.Must(app.{{.Name.Pascal}}.ApplyTo(Member))
		util.InitOrderByName(ModuleName)
	})
}