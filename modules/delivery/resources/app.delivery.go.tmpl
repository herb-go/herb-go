package app

import (
	"sync/atomic"

	"github.com/herb-go/herbconfig/source"
	"github.com/herb-go/notification/notificationdelivery"
	"github.com/herb-go/util"
	"github.com/herb-go/util/config"
	"github.com/herb-go/util/config/tomlconfig"
)

//{{.Name.Pascal}} delivery config
var {{.Name.Pascal}} = &notificationdelivery.DeliveryCenterConfig{}

var sync{{.Name.Pascal}} atomic.Value

//Store{{.Name.Pascal}} atomically store delivery config
func (a *appSync) Store{{.Name.Pascal}}(m *notificationdelivery.DeliveryCenterConfig) {
	sync{{.Name.Pascal}}.Store(m)
}

//Load{{.Name.Pascal}} atomically load delivery config
func (a *appSync) Load{{.Name.Pascal}}() *notificationdelivery.DeliveryCenterConfig {
	v := sync{{.Name.Pascal}}.Load()
	if v == nil {
		return nil
	}
	return v.(*notificationdelivery.DeliveryCenterConfig)
}

func init() {
	config.RegisterLoader(util.ConfigFile("/{{.Name.Lower}}.toml"), func(configpath source.Source) {
		util.Must(tomlconfig.Load(configpath, {{.Name.Pascal}}))
		Sync.Store{{.Name.Pascal}}({{.Name.Pascal}})
	})
}
