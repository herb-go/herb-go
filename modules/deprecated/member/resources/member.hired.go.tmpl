package hired

import (
	//"github.com/herb-go/deprecated/member"
	"github.com/herb-go/deprecated/member/drivers/membercache"
	"github.com/herb-go/deprecated/member/drivers/uidaccount"
	"github.com/herb-go/deprecated/member-drivers/tomluser"
	"github.com/herb-go/deprecated/member-drivers/ldapuser"
	"github.com/herb-go/deprecated/member-drivers/sqluser"
)

//WORKER(MemberCache):Member cache directive

//MemberCache member directive factroy  from "github.com/herb-go/deprecated/member/drivers/membercache"
var MemberCache = membercache.DirectiveFactory

//WORKER(SQLUser):Member sql user directive

//SQLUser member directive factroy  from "github.com/herb-go/deprecated/member-drivers/sqluser"
var SQLUser = sqluser.DirectiveFactory

//WORKER(TOMlUser):Member ldap user directive

//TOMlUser member directive factroy  from "github.com/herb-go/deprecated/member-drivers/tomluser"
var TOMlUser = tomluser.DirectiveFactory

//WORKER(LdapUser):Member ldap user directive

//LdapUser member directive factroy  from "github.com/herb-go/deprecated/member-drivers/ldapuser"
var LdapUser = ldapuser.DirectiveFactory

//WORKER(UIDAccount):Member uid as account  directive

//UIDAccount  directive factroy  from "github.com/herb-go/deprecated/member/drivers/uidaccount"
var UIDAccount = uidaccount.DirectiveFactory

//WORKER(PayloadLogintime):User login time payload directive

//PayloadLogintime  login time payload directive factory  from "github.com/herb-go/usersystem-drivers/commonpayload"
var PayloadLogintime = commonpayload.LoginPayload

//WORKER(PayloadHTTPIp):User http id payload  directive

//PayloadHTTPIp  http ip payload directive factory  from "github.com/herb-go/usersystem-drivers/commonpayload"
var PayloadHTTPIp = commonpayload.HTTPIpPayload

////MyMemberDirectiveFactory put your own directive factory code here
// var MyMemberDirectiveFactory = func(loader func(v interface{}) error) (member.Directive, error) {
// 	d := NewMyMemberDirective()
// 	err := loader(d)
// 	if err != nil {
// 		return nil, err
// 	}
// 	return d, nil
// }
