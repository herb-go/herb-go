package app

import (
	"sync/atomic"

	"github.com/herb-go/herb/cache/session"
	"github.com/herb-go/util"
	"github.com/herb-go/util/config"
	"github.com/herb-go/util/config/tomlconfig" 

)

//{{.PascalWithParents}} user session module
var {{.PascalWithParents}} = &session.StoreConfig{}

var sync{{.PascalWithParents}} atomic.Value

//Store{{.PascalWithParents}} atomically store {{.Raw}} user session config
func (a *appSync) Store{{.PascalWithParents}}(c *session.StoreConfig) {
	sync{{.PascalWithParents}}.Store(c)
}

//Load{{.PascalWithParents}} atomically load {{.Raw}} user session config
func (a *appSync) Load{{.PascalWithParents}}() *session.StoreConfig {
	v := sync{{.PascalWithParents}}.Load()
	if v == nil {
		return nil
	}
	return v.(*session.StoreConfig)
}


func init() {
	config.RegisterLoader(util.ConfigFile("/{{.LowerWithParentDotSeparated}}.toml"), func(configpath configuration.Configuration) {
		util.Must(tomlconfig.Load(configpath, {{.PascalWithParents}}))
		Sync.Store{{.PascalWithParents}}({{.PascalWithParents}})
	})
}
